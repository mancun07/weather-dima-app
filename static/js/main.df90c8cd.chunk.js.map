{"version":3,"sources":["components/UserSearch.module.css","components/Weather.module.css","components/WeatherDetails.module.css","components/DailyWeather.module.css","components/OtherDetailsItem.module.css","components/Layout.module.css","components/Notification.module.css","components/Loading.module.css","components/TodayInfo.module.css","components/Layout.js","store/uiSlice.js","store/citySlice.js","store/actions.js","components/UserSearch.js","components/Weather.js","components/WeatherDetails.js","components/DailyWeather.js","components/Notification.js","components/Loading.js","components/TodayInfo.js","components/OtherDetailsItem.js","components/OtherDetails.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["module","exports","Layout","props","className","classes","main","children","uiSlice","createSlice","name","initialState","notification","loading","reducers","showNotification","state","action","message","payload","clearNotification","setLoading","uiActions","actions","citySlice","weather","hourlyWeather","dailyWeather","addWeather","temp","toFixed","temp_max","feels_like","visibility","unixTimestamp","sys","sunrise","dateObject","Date","humanDateFormat","getHours","getMinutes","unixTimestamp2","sunset","dateObject2","humanDateFormat2","addHourlyWeather","hourly","forEach","el","current","addDailyWeather","daily","day","cityActions","key","actionsfetchDataHandler","userValue","dispatch","a","fetchDataHandler","fetch","response","ok","Error","json","data","fetch2DataHandler","coord","lat","lon","console","log","data2","fetch3DataHandler","data3","UserSearch","useState","cityIsValid","setCityIsValid","useDispatch","inputRef","useRef","onSubmit","e","preventDefault","inputRefValue","value","trim","isNaN","window","scrollTo","top","behavior","focus","htmlFor","notValid","ref","type","id","Weather","useSelector","city","dt","getDate","getMonth","getFullYear","motion","div","initial","x","animate","weatherDesc","description","WeatherDetails","updatedArray","slice","map","Math","random","ul","transition","duration","src","icon","alt","DailyWeather","daysOfWeek","getDay","Notification","y","Loading","class","TodayInfo","OtherDetailsItem","title","OtherDetails","humidity","wind","speed","App","ui","useEffect","timer","setTimeout","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df90c8cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"UserSearch_search-form__cnoHE\",\"form-group\":\"UserSearch_form-group__2acxc\",\"notValid\":\"UserSearch_notValid__3C2B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__lNTer\",\"weatherImage\":\"Weather_weatherImage__1apRc\",\"icon\":\"Weather_icon__1TUpD\",\"weatherDesc\":\"Weather_weatherDesc__FV1IS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-details\":\"WeatherDetails_weather-details__2iFPd\",\"weather-details__item\":\"WeatherDetails_weather-details__item__3nSOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daily-weather\":\"DailyWeather_daily-weather__LbYxV\",\"daily-weather__item\":\"DailyWeather_daily-weather__item__3xGHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"OtherDetailsItem_title__2aFSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2FxSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1CffZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-roller\":\"Loading_lds-roller__2iK5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"today-info\":\"TodayInfo_today-info__2ooVc\"};","import {Fragment} from 'react'\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <main className={classes.main}>{props.children}</main>  \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        notification: null,\r\n        loading: false\r\n    },\r\n    reducers: {\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                message: action.payload.message\r\n            }\r\n        },\r\n        clearNotification(state, action) {\r\n            state.notification = null\r\n        },\r\n        setLoading(state, action) {\r\n            state.loading = action.payload\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst citySlice = createSlice({\r\n    name: 'city',\r\n    initialState: {\r\n        weather: null,\r\n        hourlyWeather: null,\r\n        dailyWeather: null,\r\n    },\r\n    reducers: {\r\n        addWeather(state, action) {\r\n            state.weather = action.payload\r\n            state.weather.main.temp = (state.weather.main.temp - 273.15).toFixed(0)\r\n            state.weather.main.temp_max = (state.weather.main.temp_max - 273.15).toFixed(0)\r\n            state.weather.main.feels_like = (state.weather.main.feels_like - 273.15).toFixed(0)\r\n            state.weather.visibility = state.weather.visibility/1000\r\n\r\n            const unixTimestamp = state.weather.sys.sunrise\r\n            const milliseconds = unixTimestamp * 1000 \r\n            const dateObject = new Date(milliseconds)\r\n            const humanDateFormat = dateObject.getHours() + ':'+ dateObject.getMinutes()\r\n            state.weather.sys.sunrise = humanDateFormat\r\n\r\n            const unixTimestamp2 = state.weather.sys.sunset\r\n            const milliseconds2 = unixTimestamp2 * 1000 \r\n            const dateObject2 = new Date(milliseconds2)\r\n            const humanDateFormat2 = dateObject2.getHours() + ':'+ dateObject2.getMinutes()\r\n            state.weather.sys.sunset = humanDateFormat2\r\n        },\r\n        addHourlyWeather(state, action) {\r\n            state.hourlyWeather = action.payload \r\n            state.hourlyWeather.hourly.forEach(el => {\r\n                el.temp = (el.temp - 273.15).toFixed()\r\n                // return el\r\n            })\r\n            state.hourlyWeather.current.temp = (state.hourlyWeather.current.temp - 273.15).toFixed()\r\n        },\r\n        addDailyWeather(state, action) {\r\n            state.dailyWeather = action.payload\r\n            state.dailyWeather.daily.forEach(el => {\r\n                el.temp.day = (el.temp.day - 273.15).toFixed()\r\n            })\r\n    },\r\n    }\r\n})\r\n\r\n\r\nexport const cityActions = citySlice.actions;\r\n\r\nexport default citySlice;","import {cityActions} from './citySlice'\r\nimport {uiActions} from './uiSlice'\r\n\r\nconst key = '28b0799543359e8e6ed8330d199b4ccc'\r\n\r\nexport const actionsfetchDataHandler = (userValue) => {\r\n    return async (dispatch) => {\r\n        const fetchDataHandler = async () => {\r\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${userValue}&appid=${key}&lang=ru`)\r\n          if (!response.ok) {\r\n            throw new Error({message: 'There is a server error'})\r\n          }\r\n          const data = await response.json()\r\n          dispatch(cityActions.addWeather(data))\r\n          return data\r\n          }\r\n\r\n          const fetch2DataHandler = async (data) => {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=daily&lang=ru&appid=${key}`)\r\n            console.log(response.ok)\r\n            if (!response.ok) {\r\n              throw new Error({message: 'There is a server error'})\r\n            }\r\n            const data2 = await response.json()\r\n            dispatch(cityActions.addHourlyWeather(data2))\r\n            return data2\r\n          }\r\n\r\n          const fetch3DataHandler = async (data) => {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=hourly&appid=${key}&lang=ru`)\r\n            if (!response.ok) {\r\n              throw new Error({message: 'There is a server error'})\r\n            }\r\n            const data3 = await response.json()\r\n            dispatch(cityActions.addDailyWeather(data3))\r\n            return data3\r\n          }\r\n\r\n      \r\n      try {\r\n        dispatch(uiActions.setLoading(true))\r\n        const data = await fetchDataHandler()\r\n        await fetch2DataHandler(data)\r\n        await fetch3DataHandler(data)\r\n      } catch (error) {\r\n        dispatch(uiActions.showNotification({\r\n          message:'Ерунду не вводи! Такого города нет...'\r\n        }))  \r\n      }\r\n            dispatch(uiActions.setLoading(false))\r\n\r\n\r\n    // just another option below of using then/catch\r\n\r\n      // dispatch(uiActions.setLoading(true))\r\n      // fetchDataHandler()\r\n      // .then(data => fetchWeatherHandler(data))\r\n      // .catch(err => {\r\n      //   dispatch(uiActions.showNotification({\r\n      //     message:'не вводи фигню всякую!'\r\n      //   }))  \r\n      // })\r\n      // dispatch(uiActions.setLoading(false))\r\n  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {useRef, useState} from 'react'\r\nimport classes from './UserSearch.module.css'\r\nimport {uiActions} from '../store/uiSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actionsfetchDataHandler} from '../store/actions'\r\n\r\nconst UserSearch = (props) => {\r\n    const [cityIsValid, setCityIsValid] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const inputRef = useRef()\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let inputRefValue = inputRef.current.value.trim();\r\n\r\n        if (inputRefValue === '' || !isNaN(inputRefValue)) {\r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior: \"smooth\"\r\n            });\r\n            setCityIsValid(false)\r\n            dispatch(uiActions.showNotification({\r\n                message: 'Блин...Город то введи!'\r\n            }))\r\n            inputRef.current.focus();\r\n        } else {\r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior: \"smooth\"\r\n            });\r\n            dispatch(actionsfetchDataHandler(inputRefValue))\r\n            if (!cityIsValid) {\r\n                setCityIsValid(true);\r\n            }\r\n            inputRef.current.value = ''\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        <form className={classes[`search-form`]} onSubmit={onSubmitHandler}>\r\n            <div className={classes[`form-group`]}>\r\n                <label htmlFor=\"city\">Введите город</label><br />\r\n                <input className={`${!cityIsValid ? classes.notValid : '' }`} ref={inputRef} type=\"text\" id=\"city\"/>\r\n            </div>\r\n            <button>Получить данные о погоде</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserSearch\r\n","import { useSelector } from 'react-redux';\r\nimport {motion} from 'framer-motion'\r\nimport classes from './Weather.module.css'\r\n\r\n\r\nconst Weather = () => {\r\n\r\n   const weather = useSelector(state => state.city.weather)\r\n\r\n   const unixTimestamp = weather.dt\r\n   const milliseconds = unixTimestamp * 1000 \r\n   const dateObject = new Date(milliseconds)\r\n//    const humanDateFormat = dateObject.toLocaleString()\r\n   const humanDateFormat = dateObject.getDate() + '/' + dateObject.getMonth() + '/' + dateObject.getFullYear() \r\n\r\n\r\n\r\n    // const icon = `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`;\r\n\r\n    return (\r\n        <motion.div initial={{x:'-100vw'}} animate={{x:0}} className={classes.weather}>\r\n            <div className={classes.weatherDesc}>\r\n                <h2>{weather.name} </h2>\r\n                {/* <span>{humanDateFormat}</span> */}\r\n                {/* <span>{city[0].Country.LocalizedName}</span> */}\r\n                <h3>{weather.weather[0].description}</h3>\r\n                 <h1>{weather.main.temp} °C</h1> \r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './WeatherDetails.module.css'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst WeatherDetails = () => {\r\n\r\n    const hourlyWeather = useSelector(state => state.city.hourlyWeather)\r\n\r\n    const updatedArray = hourlyWeather.hourly.slice(0,6).map(el => {\r\n    \r\n    const unixTimestamp = el.dt\r\n    const milliseconds = unixTimestamp * 1000 \r\n    const dateObject = new Date(milliseconds)\r\n    // const humanDateFormat = dateObject.toLocaleString()\r\n    const humanDateFormat = dateObject.getHours() + ':' + dateObject.getMinutes() + '0'\r\n    // const hour = humanDateFormat.getHours()\r\n\r\n        return {\r\n            ...el,\r\n            dt: humanDateFormat,\r\n            id: Math.random()\r\n        }\r\n    })\r\n \r\n\r\n    return (\r\n        <motion.ul initial={{x:'-100vw'}} animate={{x:0}} transition={{duration: 0.6}} className={classes[`weather-details`]} >\r\n            {updatedArray.map(el => {\r\n                return <li className={classes[`weather-details__item`]} key={el.id}>\r\n                    <div>{el.dt}{' '}</div>\r\n                    <div>\r\n                        <img src={`http://openweathermap.org/img/w/${el.weather[0].icon}.png`} alt=\"\"/>\r\n                    </div>\r\n                    <div>{el.temp}{' '}°C</div>\r\n                </li>\r\n            })}\r\n        </motion.ul>\r\n    )\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './DailyWeather.module.css'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst DailyWeather = () => {\r\n\r\n    const daysOfWeek = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота' ]\r\n\r\n    const dailyWeather = useSelector(state => state.city.dailyWeather)\r\n\r\n    const updatedArray = dailyWeather.daily.slice(1).map(el => {\r\n\r\n    const unixTimestamp = el.dt\r\n    const milliseconds = unixTimestamp * 1000 \r\n    const dateObject = new Date(milliseconds)\r\n    const humanDateFormat = dateObject.getDay()\r\n  console.log(humanDateFormat)\r\n\r\n        return {\r\n            ...el,\r\n            dt: daysOfWeek[humanDateFormat], \r\n            id: Math.random()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className={classes[`daily-weather`]}>\r\n            {updatedArray.map(el => {\r\n                return <li className={classes[`daily-weather__item`]} key={el.id}>\r\n                    <span>{el.dt}</span>\r\n                    <span>\r\n                        <img src={`http://openweathermap.org/img/w/${el.weather[0].icon}.png`} alt=\"weather icon\"/>\r\n                    </span>\r\n                    <span>{el.temp.day}{' '}°C</span>\r\n                </li>\r\n            } )}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default DailyWeather\r\n","import {motion} from 'framer-motion'\r\nimport classes from './Notification.module.css'\r\n\r\nconst Notification = (props) => {\r\n    return (\r\n        <motion.div initial={{y: '-100vh'}} animate={{y:0}} className={classes.notification}>\r\n            <div className=\"message\">{props.message}</div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import classes from './Loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <div class={classes[`lds-roller`]}>\r\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './TodayInfo.module.css'\r\n\r\nconst TodayInfo = () => {\r\n\r\n    const weather = useSelector(state => state.city.weather)\r\n\r\n    return (\r\n        <div className={classes[`today-info`]}>\r\n            <p>Сегодня: cейчас {weather.weather[0].description}.\r\n            Teмпература воздуха {weather.main.temp} °C.\r\n            Ожидаемая максимальная температура воздуха сегодня {weather.main.temp_max} °C. \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodayInfo\r\n","import React from 'react'\r\nimport classes from './OtherDetailsItem.module.css'\r\n\r\nconst OtherDetailsItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>{props.title}</div>\r\n            <div className={classes.data}>{props.data}</div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherDetailsItem\r\n","import React from 'react'\r\nimport OtherDetailsItem from './OtherDetailsItem'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst OtherDetails = () => {\r\n\r\n    const weather = useSelector(state => state.city.weather)\r\n\r\n    return (\r\n        <div>\r\n            <OtherDetailsItem title={'Восход солнца'} data={weather.sys.sunrise}/>\r\n            <OtherDetailsItem title={'Звход солнца'} data={weather.sys.sunset}/>\r\n            <OtherDetailsItem title={'Влажность'} data={`${weather.main.humidity} %`}/>\r\n            <OtherDetailsItem title={'Ветер'} data={`${weather.wind.speed} м/c`}/>\r\n            <OtherDetailsItem title={'Ощущается как'} data={`${weather.main.feels_like} °C`}/>\r\n            <OtherDetailsItem title={'Видимость'} data={`${weather.visibility} км`}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherDetails\r\n","import { useEffect } from 'react'\nimport Layout from './components/Layout';\nimport UserSearch from \"./components/UserSearch\";\nimport Weather from './components/Weather';\nimport WeatherDetails from './components/WeatherDetails';\nimport DailyWeather from './components/DailyWeather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {actionsfetchDataHandler} from './store/actions'\nimport {uiActions} from './store/uiSlice'\nimport Notification from './components/Notification';\nimport Loading from './components/Loading';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport TodayInfo from './components/TodayInfo';\nimport OtherDetails from './components/OtherDetails';\n\n// \"homepage\": \"https://mancun07.github.io/weather-app\",\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const weather = useSelector(state => state.city.weather)\n  const hourlyWeather = useSelector(state => state.city.hourlyWeather)\n  const dailyWeather = useSelector(state => state.city.dailyWeather)\n  const notification = useSelector(state => state.ui.notification)\n  const loading = useSelector(state => state.ui.loading)\n\n  useEffect(() => {\n      dispatch(actionsfetchDataHandler('Санкт-Петербург'))\n  }, [dispatch])\n\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      dispatch(uiActions.clearNotification())\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [dispatch, notification])\n\n\n  // const unixTimestamp = 1631264400\n\n  // const milliseconds = unixTimestamp * 1000 \n  \n  // const dateObject = new Date(milliseconds)\n\n  // console.log(dateObject)\n  \n  // const humanDateFormat = dateObject.toLocaleString()\n//   const humanDateFormat = dateObject.getDay()\n// console.log(humanDateFormat)\n\n\n  return (\n      <Layout>\n        {/* <Router>\n          <Switch> */}\n        {loading && <Loading/>}\n        {!loading && notification && <Notification message={notification.message}/>}\n        {!loading && weather && <Weather/>}\n        {!loading && hourlyWeather && <WeatherDetails />}\n        <UserSearch/>\n        {!loading && dailyWeather && <DailyWeather />}\n        {!loading && weather && <TodayInfo />}\n        {!loading && weather && <OtherDetails />}\n          {/* </Switch>\n        </Router> */}\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport uiSlice from './uiSlice'\r\nimport citySlice from './citySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      ui: uiSlice.reducer,\r\n        city: citySlice.reducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}